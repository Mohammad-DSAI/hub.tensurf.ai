version: '3.8'

services:
  hub-tensurf-ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    restart: always
    environment:
      - NEXT_PUBLIC_TENSURF_URL=https://tensurf.ai

  hub-tensurf-daphne:
    build:
      context: ./api
      dockerfile: Dockerfile.daphne
    env_file:
      - .env
    depends_on:
      - hub-tensurf-postgres
      - hub-tensurf-redis
    volumes:
      - /var/run/daphne:/var/run/daphne

  hub-tensurf-gunicorn:
    build:
      context: ./api
      dockerfile: Dockerfile.gunicorn
    env_file:
      - .env
    depends_on:
      - hub-tensurf-postgres
      - hub-tensurf-redis
      - hub-tensurf-minio

  hub-tensurf-postgres:
    image: postgres:14.1-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    restart: always

  hub-tensurf-pgadmin:
    image: dpage/pgadmin4:6.1
    environment:
      PGADMIN_DEFAULT_EMAIL: tensurf@gmail.com
      PGADMIN_DEFAULT_PASSWORD: tensurf
    ports:
      - "5050:80"
    volumes:
      - tensurf_pgdata:/var/lib/pgadmin
    restart: always

  hub-tensurf-redis:
    image: "redis:alpine"
    environment:
      REDIS_DB: ${REDIS_DB}
    restart: always

  hub-tensurf-minio:
    image: minio/minio
    hostname: "minio"
    volumes:
      - /mnt/tensurf-volume:/data
    environment:
      MINIO_ACCESS_KEY: ${AWS_ACCESS_KEY}
      MINIO_SECRET_KEY: ${AWS_SECRET_KEY}
    command: 'minio server /data --console-address ":9001"'
    ports:
      - 9000:9000
      - 9001:9001


networks:
  default:
    external: true
    name: tensurf-network

volumes:
  postgres_data:
  tensurf_pgdata:
